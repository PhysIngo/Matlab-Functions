function [map] = myColorMap(str,varargin)
% myColorMap by Ingo Hermann 2021-05-18
% This functions has pretty colormaps for representing quantitative MRI
% data
% --------------------------------
% This script needs the user functions:
% - none -
%
% Exp:. clrs = myColorMap('Matlab','num',1);
%
% --- arguments ---
% map = myColorMap(str,...):
% str ... is the specific colormap
% these are all options for different color maps
% 'CMRT1', 'Matlab', 'T1Scanner', 'jump', 'CMRR', 'Hot', 'Res', 'Diff',  
% 'User', '' (Default: Ingo), 
% For input 'User',cmap you can define your own cmap which will be
% interpolated directly to a length of 64. [0,0,0;1,1,1]
% map ... output colormap
%
% --- optional input arguments ---
% myColorMap(...,varargin):
% num ... takes the position of one colormap
% interp,interpVal ... interpolates the colormap to the given size
% (Default: 64)
% intensity ... describes the intensity: 1 is no change, 0 is black and
% otherwise it is just a multiplication factor limited to [0 1]
%

% mycmap = colormap(gca)

if nargin == 0
    str = '';
end
if isempty(varargin)
    varargin{1} = '';
end
% varargin is the interpolated length of the colormap
if strcmp(str,'CMRT1')
    map = [0            0            0
            0     0.014548     0.023909
            0     0.029095     0.047818
            0     0.043643     0.071727
            0     0.058191     0.095636
            0     0.072739      0.11955
            0     0.087286      0.14345
            0      0.10183      0.16736
            0      0.11638      0.19127
            0      0.13093      0.21518
            0      0.14548      0.23909
            0      0.16003        0.263
            0      0.17457      0.28691
            0      0.18912      0.31082
            0      0.20367      0.33473
            0      0.21822      0.35864
            0      0.23276      0.38254
            0      0.24731      0.40645
            0      0.26186      0.43036
            0      0.27641      0.45427
            0      0.29095      0.47818
            0       0.3055      0.50209
            0      0.32005        0.526
            0       0.3346      0.54991
            0      0.34915      0.57382
            0      0.36369      0.59773
            0      0.37824      0.62163
            0      0.39279      0.64554
            0      0.40734      0.66945
            0      0.42188      0.69336
            0      0.43643      0.71727
            0      0.45098      0.74118
     0.010784      0.46162       0.7479
     0.021569      0.47227      0.75463
     0.032353      0.48291      0.76135
     0.043137      0.49356      0.76807
     0.053922       0.5042      0.77479
     0.064706      0.51485      0.78152
      0.07549      0.52549      0.78824
     0.086275      0.53613      0.79496
     0.097059      0.54678      0.80168
      0.10784      0.55742      0.80841
      0.11863      0.56807      0.81513
      0.12941      0.57871      0.82185
       0.1402      0.58936      0.82857
      0.15098          0.6       0.8353
      0.16176      0.61064      0.84202
      0.17255      0.62129      0.84874
      0.18333      0.63193      0.85546
      0.19412      0.64258      0.86219
       0.2049      0.65322      0.86891
      0.21569      0.66387      0.87563
      0.22647      0.67451      0.88235
      0.23725      0.68515      0.88908
      0.24804       0.6958       0.8958
      0.25882      0.70644      0.90252
      0.26961      0.71709      0.90924
      0.28039      0.72773      0.91597
      0.29118      0.73838      0.92269
      0.30196      0.74902      0.92941
      0.31939      0.74455      0.90719
      0.33682      0.74009      0.88497
      0.35425      0.73562      0.86275
      0.37168      0.73115      0.84052
      0.38911      0.72669       0.8183
      0.40654      0.72222      0.79608
      0.42397      0.71776      0.77386
      0.44139      0.71329      0.75163
      0.45882      0.70882      0.72941
      0.47625      0.70436      0.70719
      0.49368      0.69989      0.68497
      0.51111      0.69542      0.66275
      0.52854      0.69096      0.64052
      0.54597      0.68649       0.6183
       0.5634      0.68203      0.59608
      0.58083      0.67756      0.57386
      0.59826      0.67309      0.55163
      0.61569      0.66863      0.52941
      0.63312      0.66416      0.50719
      0.65054       0.6597      0.48497
      0.66797      0.65523      0.46275
       0.6854      0.65076      0.44052
      0.70283       0.6463       0.4183
      0.72026      0.64183      0.39608
      0.73769      0.63736      0.37386
      0.75512       0.6329      0.35163
      0.77255      0.62843      0.32941
      0.78998      0.62397      0.30719
      0.80741       0.6195      0.28497
      0.82484      0.61503      0.26275
      0.84227      0.61057      0.24052
       0.8597       0.6061       0.2183
      0.87712      0.60163      0.19608
      0.89455      0.59717      0.17386
      0.91198       0.5927      0.15163
      0.92941      0.58824      0.12941
      0.93038      0.59333      0.13023
      0.93134      0.59842      0.13106
      0.93231      0.60351      0.13188
      0.93328       0.6086       0.1327
      0.93424      0.61369      0.13352
      0.93521      0.61878      0.13434
      0.93617      0.62387      0.13516
      0.93714      0.62897      0.13599
      0.93811      0.63406      0.13681
      0.93907      0.63915      0.13763
      0.94004      0.64424      0.13845
        0.941      0.64933      0.13927
      0.94197      0.65442       0.1401
      0.94293      0.65951      0.14092
       0.9439       0.6646      0.14174
      0.94487       0.6697      0.14256
      0.94583      0.67479      0.14338
       0.9468      0.67988      0.14421
      0.94776      0.68497      0.14503
      0.94873      0.69006      0.14585
       0.9497      0.69515      0.14667
      0.95066      0.70024      0.14749
      0.95163      0.70533      0.14832
      0.95259      0.71043      0.14914
      0.95356      0.71552      0.14996
      0.95453      0.72061      0.15078
      0.95549       0.7257       0.1516
      0.95646      0.73079      0.15242
      0.95742      0.73588      0.15325
      0.95839      0.74097      0.15407
      0.95936      0.74606      0.15489
      0.96032      0.75116      0.15571
      0.96129      0.75625      0.15653
      0.96225      0.76134      0.15736
      0.96322      0.76643      0.15818
      0.96419      0.77152        0.159
      0.96515      0.77661      0.15982
      0.96612       0.7817      0.16064
      0.96708      0.78679      0.16147
      0.96805      0.79189      0.16229
      0.96901      0.79698      0.16311
      0.96998      0.80207      0.16393
      0.97095      0.80716      0.16475
      0.97191      0.81225      0.16557
      0.97288      0.81734       0.1664
      0.97384      0.82243      0.16722
      0.97481      0.82752      0.16804
      0.97578      0.83262      0.16886
      0.97674      0.83771      0.16968
      0.97771       0.8428      0.17051
      0.97867      0.84789      0.17133
      0.97964      0.85298      0.17215
      0.98003      0.85581      0.18807
      0.98042      0.85863      0.20399
      0.98081      0.86146      0.21991
      0.98121      0.86429      0.23583
       0.9816      0.86712      0.25175
      0.98199      0.86994      0.26767
      0.98238      0.87277      0.28359
      0.98277       0.8756      0.29951
      0.98316      0.87843      0.31543
      0.98356      0.88125      0.33135
      0.98395      0.88408      0.34727
      0.98434      0.88691      0.36319
      0.98473      0.88973      0.37911
      0.98512      0.89256      0.39503
      0.98551      0.89539      0.41095
       0.9859      0.89822      0.42687
       0.9863      0.90104      0.44279
      0.98669      0.90387      0.45871
      0.98708       0.9067      0.47463
      0.98747      0.90953      0.49055
      0.98786      0.91235      0.50647
      0.98825      0.91518      0.52239
      0.98865      0.91801      0.53831
      0.98904      0.92084      0.55423
      0.98943      0.92366      0.57015
      0.98982      0.92649      0.58608
      0.99021      0.92932        0.602
       0.9906      0.93214      0.61792
      0.99099      0.93497      0.63384
      0.99139       0.9378      0.64976
      0.99178      0.94063      0.66568
      0.99217      0.94345       0.6816
      0.99256      0.94628      0.69752
      0.99295      0.94911      0.71344
      0.99334      0.95194      0.72936
      0.99374      0.95476      0.74528
      0.99413      0.95759       0.7612
      0.99452      0.96042      0.77712
      0.99491      0.96325      0.79304
       0.9953      0.96607      0.80896
      0.99569       0.9689      0.82488
      0.99608      0.97173       0.8408
      0.99648      0.97455      0.85672
      0.99687      0.97738      0.87264
      0.99726      0.98021      0.88856
      0.99765      0.98304      0.90448
      0.99804      0.98586       0.9204
      0.99843      0.98869      0.93632
      0.99883      0.99152      0.95224
      0.99922      0.99435      0.96816
      0.99961      0.99717      0.98408
            1            1            1];
elseif strcmp(str,'T1Scanner')
    varargin{end+1} = 'interp';
    varargin{end+1} = 64;
    map = [0            0            0
            0            0          0.3
          0.1            0          0.5
         0.22            0         0.68
         0.38            0         0.85
         0.51            0         0.88
         0.64            0         0.73
          0.7            0         0.55
         0.76            0         0.39
         0.83         0.08         0.21
          0.9         0.21         0.05
         0.96         0.34            0
            1         0.45            0
            1         0.54            0
            1         0.63            0
            1         0.71            0
            1         0.78            0
            1         0.87            0
            1         0.96         0.08
            1            1          0.6
            1            1            1];
elseif strcmp(str,'Matlab')
    map = [0    0.4470    0.7410
    0.8500    0.3250    0.0980
    0.9290    0.6940    0.1250
    0.4940    0.1840    0.5560
    0.4660    0.6740    0.1880
    0.3010    0.7450    0.9330
    0.6350    0.0780    0.1840];
elseif strcmp(str,'jump')
    map = [0            0            0
            0     0.014548     0.023909
            0     0.029095     0.047818
            0     0.043643     0.071727
            0     0.058191     0.095636
            0     0.072739      0.11955
            0     0.087286      0.14345
            0      0.10183      0.16736
            0      0.11638      0.19127
            0      0.13093      0.21518
            0      0.14548      0.23909
            0      0.16003        0.263
            0      0.17457      0.28691
            0      0.18912      0.31082
            0      0.20367      0.33473
            0      0.21822      0.35864
            0      0.23276      0.38254
            0      0.24731      0.40645
            0      0.26186      0.43036
            0      0.27641      0.45427
            0      0.29095      0.47818
            0       0.3055      0.50209
            0      0.32005        0.526
            0       0.3346      0.54991
            0      0.34915      0.57382
            0      0.36369      0.59773
            0      0.37824      0.62163
            0      0.39279      0.64554
            0      0.40734      0.66945
            0      0.42188      0.69336
            0      0.43643      0.71727
            0      0.45098      0.74118
    0.0070223      0.45791      0.74556
     0.014045      0.46484      0.74993
     0.021067      0.47177      0.75431
     0.028089       0.4787      0.75869
     0.035112      0.48564      0.76307
     0.042134      0.49257      0.76744
     0.049156       0.4995      0.77182
     0.056179      0.50643       0.7762
     0.063201      0.51336      0.78058
     0.070223      0.52029      0.78495
     0.077246      0.52722      0.78933
     0.084268      0.53415      0.79371
      0.09129      0.54109      0.79809
     0.098313      0.54802      0.80246
      0.10533      0.55495      0.80684
      0.11236      0.56188      0.81122
      0.11938      0.56881       0.8156
       0.1264      0.57574      0.81997
      0.13342      0.58267      0.82435
      0.14045       0.5896      0.82873
      0.14747      0.59653      0.83311
      0.15449      0.60347      0.83748
      0.16151       0.6104      0.84186
      0.16854      0.61733      0.84624
      0.17556      0.62426      0.85062
      0.18258      0.63119      0.85499
       0.1896      0.63812      0.85937
      0.19663      0.64505      0.86375
      0.20365      0.65198      0.86813
      0.21067      0.65891       0.8725
      0.21769      0.66585      0.87688
      0.22471      0.67278      0.88126
      0.23174      0.67971      0.88564
      0.23876      0.68664      0.89001
      0.24578      0.69357      0.89439
       0.2528       0.7005      0.89877
      0.25983      0.70743      0.90315
      0.26685      0.71436      0.90752
      0.27387       0.7213       0.9119
      0.28089      0.72823      0.91628
      0.28792      0.73516      0.92066
      0.29494      0.74209      0.92503
      0.30196      0.74902      0.92941
      0.31765      0.73703      0.90577
      0.33333      0.72504      0.88213
      0.34902      0.71305      0.85849
      0.36471      0.70106      0.83484
      0.38039      0.68908       0.8112
      0.39608      0.67709      0.78756
      0.41176       0.6651      0.76392
      0.42745      0.65311      0.74028
      0.44314      0.64112      0.71664
      0.45882      0.62913        0.693
      0.47451      0.61714      0.66935
       0.4902      0.60515      0.64571
      0.50588      0.59316      0.62207
      0.52157      0.58118      0.59843
      0.53725      0.56919      0.57479
      0.55294       0.5572      0.55115
      0.56863      0.54521      0.52751
      0.58431      0.53322      0.50386
          0.6      0.52123      0.48022
      0.61569      0.50924      0.45658
      0.63137      0.49725      0.43294
      0.64706      0.48527       0.4093
      0.66274      0.47328      0.38566
      0.67843      0.46129      0.36202
      0.69412       0.4493      0.33837
       0.7098      0.43731      0.31473
      0.72549      0.42532      0.29109
      0.74118      0.41333      0.26745
      0.75686      0.40134      0.24381
      0.77255      0.38935      0.22017
      0.78823      0.37737      0.19653
      0.80392      0.36538      0.17288
      0.81961      0.35339      0.14924
      0.83529       0.3414       0.1256
      0.85098      0.32941      0.10196
      0.85378      0.34079      0.10349
      0.85657      0.35217      0.10501
      0.85937      0.36356      0.10654
      0.86217      0.37494      0.10806
      0.86496      0.38632      0.10959
      0.86776       0.3977      0.11112
      0.87056      0.40908      0.11264
      0.87336      0.42047      0.11417
      0.87615      0.43185      0.11569
      0.87895      0.44323      0.11722
      0.88175      0.45461      0.11874
      0.88454      0.46599      0.12027
      0.88734      0.47738       0.1218
      0.89014      0.48876      0.12332
      0.89293      0.50014      0.12485
      0.89573      0.51152      0.12637
      0.89853       0.5229       0.1279
      0.90133      0.53429      0.12943
      0.90412      0.54567      0.13095
      0.90692      0.55705      0.13248
      0.90972      0.56843        0.134
      0.91251      0.57981      0.13553
      0.91531      0.59119      0.13706
      0.91811      0.60258      0.13858
       0.9209      0.61396      0.14011
       0.9237      0.62534      0.14163
       0.9265      0.63672      0.14316
      0.92929       0.6481      0.14468
      0.93209      0.65949      0.14621
      0.93489      0.67087      0.14774
      0.93769      0.68225      0.14926
      0.94048      0.69363      0.15079
      0.94328      0.70501      0.15231
      0.94608       0.7164      0.15384
      0.94887      0.72778      0.15537
      0.95167      0.73916      0.15689
      0.95447      0.75054      0.15842
      0.95726      0.76192      0.15994
      0.96006      0.77331      0.16147
      0.96286      0.78469      0.16299
      0.96566      0.79607      0.16452
      0.96845      0.80745      0.16605
      0.97125      0.81883      0.16757
      0.97405      0.83022       0.1691
      0.97684       0.8416      0.17062
      0.97964      0.85298      0.17215
      0.97783      0.85412      0.18912
      0.97603      0.85526      0.20609
      0.97422       0.8564      0.22307
      0.97241      0.85754      0.24004
      0.97061      0.85868      0.25701
       0.9688      0.85981      0.27398
      0.96699      0.86095      0.29096
      0.96519      0.86209      0.30793
      0.96338      0.86323       0.3249
      0.96157      0.86437      0.34187
      0.95977      0.86551      0.35885
      0.95796      0.86665      0.37582
      0.95616      0.86779      0.39279
      0.95435      0.86893      0.40976
      0.95254      0.87007      0.42673
      0.95074      0.87121      0.44371
      0.94893      0.87234      0.46068
      0.94712      0.87348      0.47765
      0.94532      0.87462      0.49462
      0.94351      0.87576       0.5116
       0.9417       0.8769      0.52857
       0.9399      0.87804      0.54554
      0.93809      0.87918      0.56251
      0.93628      0.88032      0.57949
      0.93448      0.88146      0.59646
      0.93267       0.8826      0.61343
      0.93086      0.88373       0.6304
      0.92906      0.88487      0.64738
      0.92725      0.88601      0.66435
      0.92544      0.88715      0.68132
      0.92364      0.88829      0.69829
      0.92183      0.88943      0.71526
      0.92003      0.89057      0.73224
      0.91822      0.89171      0.74921
      0.91641      0.89285      0.76618
      0.91461      0.89399      0.78315
       0.9128      0.89513      0.80013
      0.91099      0.89626       0.8171
      0.90919       0.8974      0.83407
      0.90738      0.89854      0.85104
      0.90557      0.89968      0.86802
      0.90377      0.90082      0.88499
      0.90196      0.90196      0.90196
            1            1            1];
        
elseif strcmp(str,'CMRR')
    CMRmap=flipdim([0.00196078442968428 0.00196078442968428 0.00196078442968428;0.803921639919281 0.00392156885936856 1;0.69606351852417 0.0040369089692831 1;0.58823037147522 0.00415224907919765 1;0.480422139167786 0.00426758965477347 1;0.37263885140419 0.00438292976468802 1;0.264880508184433 0.00449826987460256 1;0.157147109508514 0.00461361045017838 1;0.0494386367499828 0.00472895056009293 1;0.00484429067000747 0.067933477461338 1;0.0049596312455833 0.175822749733925 1;0.00507497135549784 0.283687084913254 1;0.00519031146541238 0.391526490449905 1;0.00530565204098821 0.499340951442719 1;0.00542099215090275 0.607130467891693 1;0.00553633226081729 0.714895069599152 1;0.00565167283639312 0.822634696960449 1;0.00576701294630766 0.930349409580231 1;0.0058823530562222 1 0.965882420539856;0.0056372550316155 1 0.908236563205719;0.00539215700700879 1 0.850562334060669;0.00514705898240209 1 0.792859792709351;0.00490196095779538 1 0.735128879547119;0.00465686293318868 1 0.677369594573975;0.00441176490858197 1 0.619581937789917;0.00416666688397527 1 0.561765968799591;0.00392156885936856 1 0.503921627998352;0.00392156885936856 1 0.319607883691788;0.00392156885936856 1 0.135294139385223;0.056862723082304 1 0.00392156885936856;0.241176456212997 1 0.00392156885936856;0.425490170717239 1 0.00392156885936856;0.609803915023804 1 0.00392156885936856;0.794117629528046 1 0.00392156885936856;0.978431344032288 1 0.00392156885936856;1 0.841176509857178 0.00392156885936856;1 0.656862735748291 0.00392156885936856;1 0.472549021244049 0.00392156885936856;1 0.288235306739807 0.00392156885936856;1 0.103921569883823 0.00392156885936856;0.983986914157867 0.0931904837489128 0.00986352749168873;0.966013073921204 0.0829571336507797 0.0155866863206029;0.94803923368454 0.0732118859887123 0.0210910458117723;0.930065393447876 0.0639451369643211 0.0263766068965197;0.912091493606567 0.0551472529768944 0.0314433686435223;0.894117653369904 0.0468086190521717 0.0362913310527802;0.87614381313324 0.0409204922616482 0.0429213680326939;0.858169972896576 0.0453308559954166 0.0591910853981972;0.840196073055267 0.0495224185287952 0.0745928138494492;0.822222232818604 0.0534951835870743 0.0891361758112907;0.80424839258194 0.0572491474449635 0.102830789983273;0.786274552345276 0.0607843138277531 0.115686275064945;0.767647087574005 0.0640250891447067 0.127339690923691;0.749019622802734 0.0670402124524117 0.138165190815926;0.730392158031464 0.0698296800255775 0.148172467947006;0.711764752864838 0.0723934918642044 0.157371208071709;0.693137288093567 0.0747316405177116 0.165771096944809;0.674509823322296 0.0768441408872604 0.173381820321083;0.655882358551025 0.0787309780716896 0.180213063955307;0.637254953384399 0.0803921595215797 0.186274513602257],1);
    
    x = 1:50/(60-1):60;           % 64 color levels instead of 9
    x1 = 1:60;
    for i = 1:3
        % spline fit intermediate values
        cmap(:,i) = spline(x1,CMRmap(:,i),x)';
    end
    % eliminate spurious values outside of range 
    cmap = abs(cmap/max(max(cmap)));

    cmap = flipud(cmap);        % invert Color map
    cmap(1,:) = [0, 0, 0];      % invert Set Background to black
    map = cmap;
elseif strcmp(str,'Hot')
    map = [0    0   0
        1   0   0
        1   1   0
        1   1   1];
elseif strcmp(str,'Res')
    map = [0.117851130664349,0,0;0.195856556296349,0.102868899703026,0.102868899703026;0.229199975728989,0.129743844270706,0.103897139430046;0.262543380260468,0.156618788838387,0.104925379157066;0.295886814594269,0.183493733406067,0.105953626334667;0.329230219125748,0.210368677973747,0.106981866061687;0.362573653459549,0.237243622541428,0.108010105788708;0.395917057991028,0.264118552207947,0.109038345515728;0.429260492324829,0.290993511676788,0.110066585242748;0.462603896856308,0.317868441343308,0.111094824969769;0.495947331190109,0.344743400812149,0.112123072147369;0.529290735721588,0.371618330478668,0.113151311874390;0.562634170055389,0.398493289947510,0.114179551601410;0.595977604389191,0.425368219614029,0.115207791328430;0.629320979118347,0.452243179082871,0.116236031055450;0.662664413452148,0.479118108749390,0.117264278233051;0.696007847785950,0.505993068218231,0.118292517960072;0.729351282119751,0.532868027687073,0.119320757687092;0.762694656848908,0.559742927551270,0.120348997414112;0.796038091182709,0.586617887020111,0.121377237141132;0.829381525516510,0.613492846488953,0.122405476868153;0.862724959850311,0.640367805957794,0.123433724045753;0.896068334579468,0.667242705821991,0.124461963772774;0.929411768913269,0.694117665290833,0.125490203499794;0.928662121295929,0.703171968460083,0.149646177887917;0.927912533283234,0.712226271629334,0.173802152276039;0.927162885665894,0.721280574798584,0.197958126664162;0.926413297653198,0.730334877967835,0.222114115953445;0.925663650035858,0.739389121532440,0.246270090341568;0.924914002418518,0.748443424701691,0.270426064729691;0.924164414405823,0.757497727870941,0.294582039117813;0.923414766788483,0.766552031040192,0.318738013505936;0.922665119171143,0.775606334209442,0.342893987894058;0.921915531158447,0.784660637378693,0.367049962282181;0.921165883541107,0.793714940547943,0.391205936670303;0.920416235923767,0.802769184112549,0.415361911058426;0.919666647911072,0.811823487281799,0.439517885446548;0.918917000293732,0.820877790451050,0.463673859834671;0.918167412281036,0.829932093620300,0.487829834222794;0.917417764663696,0.838986396789551,0.511985838413239;0.916668117046356,0.848040699958801,0.536141812801361;0.915918529033661,0.857095003128052,0.560297787189484;0.915168881416321,0.866149306297302,0.584453761577606;0.914419293403626,0.875203609466553,0.608609735965729;0.913669645786285,0.884257853031158,0.632765710353851;0.912919998168945,0.893312156200409,0.656921684741974;0.912170410156250,0.902366459369659,0.681077659130096;0.911420762538910,0.911420762538910,0.705233633518219;0.916956961154938,0.916956961154938,0.723656535148621;0.922493159770966,0.922493159770966,0.742079436779022;0.928029358386993,0.928029358386993,0.760502338409424;0.933565557003021,0.933565557003021,0.778925240039825;0.939101755619049,0.939101755619049,0.797348141670227;0.944637954235077,0.944637954235077,0.815771043300629;0.950174152851105,0.950174152851105,0.834193944931030;0.955710411071777,0.955710411071777,0.852616786956787;0.961246609687805,0.961246609687805,0.871039688587189;0.966782808303833,0.966782808303833,0.889462590217590;0.972319006919861,0.972319006919861,0.907885491847992;0.977855205535889,0.977855205535889,0.926308393478394;0.983391404151917,0.983391404151917,0.944731295108795;0.988927602767944,0.988927602767944,0.963154196739197;0.994463801383972,0.994463801383972,0.981577098369598;1,1,1];
elseif strcmp(str,'User')
    map = varargin{1};
elseif strcmp(str,'Diff')
    map = [0,0.447,0.741;1,1,1;0.635,0.078,0.184];
else
    map = [0         0         0
         0    0.0113    0.0185
         0    0.0225    0.0371
         0    0.0338    0.0556
         0    0.0451    0.0741
         0    0.0564    0.0926
         0    0.0676    0.1112
         0    0.0789    0.1297
         0    0.0902    0.1482
         0    0.1015    0.1668
         0    0.1127    0.1853
         0    0.1240    0.2038
         0    0.1353    0.2224
         0    0.1466    0.2409
         0    0.1578    0.2594
         0    0.1691    0.2779
         0    0.1804    0.2965
         0    0.1917    0.3150
         0    0.2029    0.3335
         0    0.2142    0.3521
         0    0.2255    0.3706
         0    0.2368    0.3891
         0    0.2480    0.4076
         0    0.2593    0.4262
         0    0.2706    0.4447
         0    0.2819    0.4632
         0    0.2931    0.4818
         0    0.3044    0.5003
         0    0.3157    0.5188
         0    0.3270    0.5374
         0    0.3382    0.5559
         0    0.3495    0.5744
         0    0.3608    0.5929
         0    0.3721    0.6115
         0    0.3833    0.6300
         0    0.3946    0.6485
         0    0.4059    0.6671
         0    0.4172    0.6856
         0    0.4284    0.7041
         0    0.4397    0.7227
         0    0.4510    0.7412
    0.0077    0.4586    0.7460
    0.0155    0.4663    0.7508
    0.0232    0.4739    0.7557
    0.0310    0.4815    0.7605
    0.0387    0.4892    0.7653
    0.0465    0.4968    0.7701
    0.0542    0.5045    0.7750
    0.0619    0.5121    0.7798
    0.0697    0.5198    0.7846
    0.0774    0.5274    0.7894
    0.0852    0.5350    0.7943
    0.0929    0.5427    0.7991
    0.1007    0.5503    0.8039
    0.1084    0.5580    0.8087
    0.1161    0.5656    0.8136
    0.1239    0.5733    0.8184
    0.1316    0.5809    0.8232
    0.1394    0.5885    0.8281
    0.1471    0.5962    0.8329
    0.1549    0.6038    0.8377
    0.1626    0.6115    0.8425
    0.1703    0.6191    0.8474
    0.1781    0.6267    0.8522
    0.1858    0.6344    0.8570
    0.1936    0.6420    0.8618
    0.2013    0.6497    0.8667
    0.2090    0.6573    0.8715
    0.2168    0.6650    0.8763
    0.2245    0.6726    0.8811
    0.2323    0.6802    0.8860
    0.2400    0.6879    0.8908
    0.2478    0.6955    0.8956
    0.2555    0.7032    0.9005
    0.2632    0.7108    0.9053
    0.2710    0.7185    0.9101
    0.2787    0.7261    0.9149
    0.2865    0.7337    0.9198
    0.2942    0.7414    0.9246
    0.3020    0.7490    0.9294
    0.3257    0.7514    0.9232
    0.3494    0.7539    0.9171
    0.3731    0.7563    0.9109
    0.3968    0.7587    0.9048
    0.4205    0.7612    0.8986
    0.4443    0.7636    0.8924
    0.4680    0.7660    0.8863
    0.4917    0.7684    0.8801
    0.5154    0.7709    0.8739
    0.5391    0.7733    0.8678
    0.5628    0.7757    0.8616
    0.5866    0.7782    0.8555
    0.6103    0.7806    0.8493
    0.6340    0.7830    0.8431
    0.6577    0.7854    0.8370
    0.6814    0.7879    0.8308
    0.7051    0.7903    0.8246
    0.7289    0.7927    0.8185
    0.7526    0.7951    0.8123
    0.7763    0.7976    0.8062
    0.8000    0.8000    0.8000
    0.8068    0.7889    0.7647
    0.8136    0.7777    0.7294
    0.8204    0.7666    0.6941
    0.8272    0.7554    0.6588
    0.8341    0.7443    0.6235
    0.8409    0.7331    0.5882
    0.8477    0.7220    0.5529
    0.8545    0.7108    0.5176
    0.8613    0.6997    0.4824
    0.8681    0.6885    0.4471
    0.8749    0.6774    0.4118
    0.8817    0.6663    0.3765
    0.8885    0.6551    0.3412
    0.8954    0.6440    0.3059
    0.9022    0.6328    0.2706
    0.9090    0.6217    0.2353
    0.9158    0.6105    0.2000
    0.9226    0.5994    0.1647
    0.9294    0.5882    0.1294
    0.9306    0.5947    0.1305
    0.9319    0.6012    0.1315
    0.9331    0.6076    0.1325
    0.9343    0.6141    0.1336
    0.9355    0.6205    0.1346
    0.9368    0.6270    0.1357
    0.9380    0.6334    0.1367
    0.9392    0.6399    0.1377
    0.9404    0.6464    0.1388
    0.9417    0.6528    0.1398
    0.9429    0.6593    0.1409
    0.9441    0.6657    0.1419
    0.9453    0.6722    0.1430
    0.9466    0.6786    0.1440
    0.9478    0.6851    0.1450
    0.9490    0.6916    0.1461
    0.9502    0.6980    0.1471
    0.9515    0.7045    0.1482
    0.9527    0.7109    0.1492
    0.9539    0.7174    0.1503
    0.9551    0.7238    0.1513
    0.9564    0.7303    0.1523
    0.9576    0.7368    0.1534
    0.9588    0.7432    0.1544
    0.9600    0.7497    0.1555
    0.9613    0.7561    0.1565
    0.9625    0.7626    0.1576
    0.9637    0.7690    0.1586
    0.9649    0.7755    0.1596
    0.9662    0.7820    0.1607
    0.9674    0.7884    0.1617
    0.9686    0.7949    0.1628
    0.9698    0.8013    0.1638
    0.9711    0.8078    0.1649
    0.9723    0.8142    0.1659
    0.9735    0.8207    0.1669
    0.9747    0.8272    0.1680
    0.9760    0.8336    0.1690
    0.9772    0.8401    0.1701
    0.9784    0.8465    0.1711
    0.9796    0.8530    0.1722
    0.9802    0.8567    0.1934
    0.9807    0.8605    0.2146
    0.9812    0.8643    0.2358
    0.9817    0.8681    0.2571
    0.9823    0.8718    0.2783
    0.9828    0.8756    0.2995
    0.9833    0.8794    0.3207
    0.9838    0.8831    0.3420
    0.9843    0.8869    0.3632
    0.9849    0.8907    0.3844
    0.9854    0.8944    0.4056
    0.9859    0.8982    0.4269
    0.9864    0.9020    0.4481
    0.9869    0.9058    0.4693
    0.9875    0.9095    0.4906
    0.9880    0.9133    0.5118
    0.9885    0.9171    0.5330
    0.9890    0.9208    0.5542
    0.9896    0.9246    0.5755
    0.9901    0.9284    0.5967
    0.9906    0.9321    0.6179
    0.9911    0.9359    0.6391
    0.9916    0.9397    0.6604
    0.9922    0.9435    0.6816
    0.9927    0.9472    0.7028
    0.9932    0.9510    0.7240
    0.9937    0.9548    0.7453
    0.9943    0.9585    0.7665
    0.9948    0.9623    0.7877
    0.9953    0.9661    0.8090
    0.9958    0.9698    0.8302
    0.9963    0.9736    0.8514
    0.9969    0.9774    0.8726
    0.9974    0.9812    0.8939
    0.9979    0.9849    0.9151
    0.9984    0.9887    0.9363
    0.9990    0.9925    0.9575
    0.9995    0.9962    0.9788
    1.0000    1.0000    1.0000];
end
if max(strcmp(varargin,'interp'))
    idx = 1 + find(strcmp(varargin,'interp'));
    interpVal = varargin{1,idx};
else
    interpVal = 64;
end
    

if (max(strcmp(varargin,'num'))&&~max(strcmp(varargin,'interp'))) || strcmp(str,'Matlab')
else
    for i=1:1:3
        newMap(:,i) = interp1(1:size(map,1),map(:,i),1:(size(map,1)-1)/(interpVal-1):size(map,1),'spline');
    end
    newMap(newMap>1) = 1;newMap(newMap<0) = 0;
    map = newMap;
end

if max(strcmp(varargin,'num'))
    idx = 1 + find(strcmp(varargin,'num'));
    num = varargin{1,idx};
    newMap = map(num,:);
    map = newMap;
end

if max(strcmp(varargin,'intensity'))
    idx = 1 + find(strcmp(varargin,'intensity'));
    intensity = varargin{1,idx};
    for i=1:1:size(map,1)
        newMap = map(i,:);
        newMap = intensity.*newMap;
        newMap(newMap>1) = 1;
        newMap(newMap<0) = 0;
        map(i,:) = newMap;
    end
end

if max(strcmp(varargin,'white'))
    idx = 1 + find(strcmp(varargin,'white'));
    steps = varargin{1,idx};
    newMap = map;
    for i=1:1:abs(steps)
        tmpMap = map;
        if sign(steps)>0
            tmpMap = tmpMap+(1-tmpMap)/(steps-1)*(i-1);
        else
            tmpMap = tmpMap/(steps-1)*(steps-i);
        end
        tmpMap(tmpMap>1) = 1;
        tmpMap(tmpMap<0) = 0;
        newMap(i,:) = tmpMap;
    end
    map = newMap;
end



end